# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ModelsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ModelsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ModelsApi }) = "http://localhost"

const _returntypes_create_framework_models_frameworks_post_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("201", "x"=>".") * "\$") => CreateFeatureDatasetsFeaturesPost201Response,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_create_framework_models_frameworks_post(_api::ModelsApi, model_framework::ModelFramework; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_framework_models_frameworks_post_ModelsApi, "/models/frameworks", [], model_framework)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create Framework

Create framework metadata

Params:
- model_framework::ModelFramework (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function create_framework_models_frameworks_post(_api::ModelsApi, model_framework::ModelFramework; _mediaType=nothing)
    _ctx = _oacinternal_create_framework_models_frameworks_post(_api, model_framework; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_framework_models_frameworks_post(_api::ModelsApi, response_stream::Channel, model_framework::ModelFramework; _mediaType=nothing)
    _ctx = _oacinternal_create_framework_models_frameworks_post(_api, model_framework; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_intermediate_models_intermediates_post_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("201", "x"=>".") * "\$") => CreateFeatureDatasetsFeaturesPost201Response,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_create_intermediate_models_intermediates_post(_api::ModelsApi, intermediate::Intermediate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_intermediate_models_intermediates_post_ModelsApi, "/models/intermediates", [], intermediate)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create Intermediate

Create intermediate and return its ID

Params:
- intermediate::Intermediate (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function create_intermediate_models_intermediates_post(_api::ModelsApi, intermediate::Intermediate; _mediaType=nothing)
    _ctx = _oacinternal_create_intermediate_models_intermediates_post(_api, intermediate; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_intermediate_models_intermediates_post(_api::ModelsApi, response_stream::Channel, intermediate::Intermediate; _mediaType=nothing)
    _ctx = _oacinternal_create_intermediate_models_intermediates_post(_api, intermediate; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_model_models_post_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("201", "x"=>".") * "\$") => CreateFeatureDatasetsFeaturesPost201Response,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_create_model_models_post(_api::ModelsApi, model::Model; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_model_models_post_ModelsApi, "/models", [], model)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create Model

Create model and return its ID

Params:
- model::Model (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function create_model_models_post(_api::ModelsApi, model::Model; _mediaType=nothing)
    _ctx = _oacinternal_create_model_models_post(_api, model; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_model_models_post(_api::ModelsApi, response_stream::Channel, model::Model; _mediaType=nothing)
    _ctx = _oacinternal_create_model_models_post(_api, model; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_framework_models_frameworks_name_delete_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("404", "x"=>".") * "\$") => String,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_delete_framework_models_frameworks_name_delete(_api::ModelsApi, name::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_framework_models_frameworks_name_delete_ModelsApi, "/models/frameworks/{name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Framework

Delete framework metadata

Params:
- name::String (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function delete_framework_models_frameworks_name_delete(_api::ModelsApi, name::String; _mediaType=nothing)
    _ctx = _oacinternal_delete_framework_models_frameworks_name_delete(_api, name; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_framework_models_frameworks_name_delete(_api::ModelsApi, response_stream::Channel, name::String; _mediaType=nothing)
    _ctx = _oacinternal_delete_framework_models_frameworks_name_delete(_api, name; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_intermediate_models_intermediates_id_delete_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("404", "x"=>".") * "\$") => String,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_delete_intermediate_models_intermediates_id_delete(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_intermediate_models_intermediates_id_delete_ModelsApi, "/models/intermediates/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Intermediate

Delete framework metadata

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function delete_intermediate_models_intermediates_id_delete(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_delete_intermediate_models_intermediates_id_delete(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_intermediate_models_intermediates_id_delete(_api::ModelsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_delete_intermediate_models_intermediates_id_delete(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_framework_models_frameworks_name_get_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_framework_models_frameworks_name_get(_api::ModelsApi, name::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_framework_models_frameworks_name_get_ModelsApi, "/models/frameworks/{name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Framework

Retrieve framework metadata

Params:
- name::String (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_framework_models_frameworks_name_get(_api::ModelsApi, name::String; _mediaType=nothing)
    _ctx = _oacinternal_get_framework_models_frameworks_name_get(_api, name; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_framework_models_frameworks_name_get(_api::ModelsApi, response_stream::Channel, name::String; _mediaType=nothing)
    _ctx = _oacinternal_get_framework_models_frameworks_name_get(_api, name; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_intermediate_models_intermediates_id_get_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_intermediate_models_intermediates_id_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_intermediate_models_intermediates_id_get_ModelsApi, "/models/intermediates/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Intermediate

Retrieve model

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_intermediate_models_intermediates_id_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_intermediate_models_intermediates_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_intermediate_models_intermediates_id_get(_api::ModelsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_intermediate_models_intermediates_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_model_description_models_id_descriptions_get_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_model_description_models_id_descriptions_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_model_description_models_id_descriptions_get_ModelsApi, "/models/{id}/descriptions", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Model Description

Retrieve model

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_model_description_models_id_descriptions_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_model_description_models_id_descriptions_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_model_description_models_id_descriptions_get(_api::ModelsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_model_description_models_id_descriptions_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_model_models_id_get_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_model_models_id_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_model_models_id_get_ModelsApi, "/models/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Model

Retrieve model

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_model_models_id_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_model_models_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_model_models_id_get(_api::ModelsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_model_models_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_model_parameters_models_id_parameters_get_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_model_parameters_models_id_parameters_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_model_parameters_models_id_parameters_get_ModelsApi, "/models/{id}/parameters", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Model Parameters

Retrieve model

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_model_parameters_models_id_parameters_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_model_parameters_models_id_parameters_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_model_parameters_models_id_parameters_get(_api::ModelsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_model_parameters_models_id_parameters_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_single_model_parameter_models_model_parameters_id_get_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_single_model_parameter_models_model_parameters_id_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_single_model_parameter_models_model_parameters_id_get_ModelsApi, "/models/model_parameters/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Single Model Parameter

Retrieve model parameter

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_single_model_parameter_models_model_parameters_id_get(_api::ModelsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_single_model_parameter_models_model_parameters_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_single_model_parameter_models_model_parameters_id_get(_api::ModelsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_single_model_parameter_models_model_parameters_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_model_descriptions_models_descriptions_get_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_list_model_descriptions_models_descriptions_get(_api::ModelsApi; page_size=nothing, page=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_model_descriptions_models_descriptions_get_ModelsApi, "/models/descriptions", [])
    OpenAPI.Clients.set_param(_ctx.query, "page_size", page_size)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page", page)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List Model Descriptions

Retrieve all models  This will return the full list of models, even the previous ones from edit history.

Params:
- page_size::Int64
- page::Int64

Return: Any, OpenAPI.Clients.ApiResponse
"""
function list_model_descriptions_models_descriptions_get(_api::ModelsApi; page_size=nothing, page=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_model_descriptions_models_descriptions_get(_api; page_size=page_size, page=page, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_model_descriptions_models_descriptions_get(_api::ModelsApi, response_stream::Channel; page_size=nothing, page=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_model_descriptions_models_descriptions_get(_api; page_size=page_size, page=page, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_model_opt_models_opts_model_operation_post_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("201", "x"=>".") * "\$") => CreateFeatureDatasetsFeaturesPost201Response,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_model_opt_models_opts_model_operation_post(_api::ModelsApi, model_operation::ModelOperations, model_opt_payload::ModelOptPayload; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_model_opt_models_opts_model_operation_post_ModelsApi, "/models/opts/{model_operation}", [], model_opt_payload)
    OpenAPI.Clients.set_param(_ctx.path, "model_operation", model_operation)  # type ModelOperations
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Model Opt

Make modeling operations.

Params:
- model_operation::ModelOperations (required)
- model_opt_payload::ModelOptPayload (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function model_opt_models_opts_model_operation_post(_api::ModelsApi, model_operation::ModelOperations, model_opt_payload::ModelOptPayload; _mediaType=nothing)
    _ctx = _oacinternal_model_opt_models_opts_model_operation_post(_api, model_operation, model_opt_payload; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function model_opt_models_opts_model_operation_post(_api::ModelsApi, response_stream::Channel, model_operation::ModelOperations, model_opt_payload::ModelOptPayload; _mediaType=nothing)
    _ctx = _oacinternal_model_opt_models_opts_model_operation_post(_api, model_operation, model_opt_payload; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_model_models_id_post_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_update_model_models_id_post(_api::ModelsApi, id::Int64, model::Model; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_update_model_models_id_post_ModelsApi, "/models/{id}", [], model)
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update Model

Update model content

Params:
- id::Int64 (required)
- model::Model (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function update_model_models_id_post(_api::ModelsApi, id::Int64, model::Model; _mediaType=nothing)
    _ctx = _oacinternal_update_model_models_id_post(_api, id, model; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_model_models_id_post(_api::ModelsApi, response_stream::Channel, id::Int64, model::Model; _mediaType=nothing)
    _ctx = _oacinternal_update_model_models_id_post(_api, id, model; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_model_parameters_models_id_parameters_put_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_update_model_parameters_models_id_parameters_put(_api::ModelsApi, id::Int64, request_body::Vector{Any}; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_update_model_parameters_models_id_parameters_put_ModelsApi, "/models/{id}/parameters", [], request_body)
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update Model Parameters

Update the parameters for a model

Params:
- id::Int64 (required)
- request_body::Vector{Any} (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function update_model_parameters_models_id_parameters_put(_api::ModelsApi, id::Int64, request_body::Vector{Any}; _mediaType=nothing)
    _ctx = _oacinternal_update_model_parameters_models_id_parameters_put(_api, id, request_body; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_model_parameters_models_id_parameters_put(_api::ModelsApi, response_stream::Channel, id::Int64, request_body::Vector{Any}; _mediaType=nothing)
    _ctx = _oacinternal_update_model_parameters_models_id_parameters_put(_api, id, request_body; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_framework_models_frameworks_post
export create_intermediate_models_intermediates_post
export create_model_models_post
export delete_framework_models_frameworks_name_delete
export delete_intermediate_models_intermediates_id_delete
export get_framework_models_frameworks_name_get
export get_intermediate_models_intermediates_id_get
export get_model_description_models_id_descriptions_get
export get_model_models_id_get
export get_model_parameters_models_id_parameters_get
export get_single_model_parameter_models_model_parameters_id_get
export list_model_descriptions_models_descriptions_get
export model_opt_models_opts_model_operation_post
export update_model_models_id_post
export update_model_parameters_models_id_parameters_put
