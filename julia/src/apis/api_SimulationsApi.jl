# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct SimulationsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `SimulationsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ SimulationsApi }) = "http://localhost"

const _returntypes_create_plan_simulations_plans_post_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("201", "x"=>".") * "\$") => CreateFeatureDatasetsFeaturesPost201Response,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_create_plan_simulations_plans_post(_api::SimulationsApi, plan::Plan; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_plan_simulations_plans_post_SimulationsApi, "/simulations/plans", [], plan)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create Plan

Create plan and return its ID

Params:
- plan::Plan (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function create_plan_simulations_plans_post(_api::SimulationsApi, plan::Plan; _mediaType=nothing)
    _ctx = _oacinternal_create_plan_simulations_plans_post(_api, plan; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_plan_simulations_plans_post(_api::SimulationsApi, response_stream::Channel, plan::Plan; _mediaType=nothing)
    _ctx = _oacinternal_create_plan_simulations_plans_post(_api, plan; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_run_from_description_simulations_runs_descriptions_post_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("201", "x"=>".") * "\$") => CreateFeatureDatasetsFeaturesPost201Response,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_create_run_from_description_simulations_runs_descriptions_post(_api::SimulationsApi, run_description::RunDescription; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_run_from_description_simulations_runs_descriptions_post_SimulationsApi, "/simulations/runs/descriptions", [], run_description)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create Run From Description

Create a run with no parameters initialized

Params:
- run_description::RunDescription (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function create_run_from_description_simulations_runs_descriptions_post(_api::SimulationsApi, run_description::RunDescription; _mediaType=nothing)
    _ctx = _oacinternal_create_run_from_description_simulations_runs_descriptions_post(_api, run_description; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_run_from_description_simulations_runs_descriptions_post(_api::SimulationsApi, response_stream::Channel, run_description::RunDescription; _mediaType=nothing)
    _ctx = _oacinternal_create_run_from_description_simulations_runs_descriptions_post(_api, run_description; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_run_simulations_runs_post_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("201", "x"=>".") * "\$") => CreateFeatureDatasetsFeaturesPost201Response,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_create_run_simulations_runs_post(_api::SimulationsApi, run::Run; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_run_simulations_runs_post_SimulationsApi, "/simulations/runs", [], run)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create Run

Create run with parameters

Params:
- run::Run (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function create_run_simulations_runs_post(_api::SimulationsApi, run::Run; _mediaType=nothing)
    _ctx = _oacinternal_create_run_simulations_runs_post(_api, run; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_run_simulations_runs_post(_api::SimulationsApi, response_stream::Channel, run::Run; _mediaType=nothing)
    _ctx = _oacinternal_create_run_simulations_runs_post(_api, run; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_plan_simulations_plans_id_get_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_plan_simulations_plans_id_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_plan_simulations_plans_id_get_SimulationsApi, "/simulations/plans/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Plan

Retrieve plan

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_plan_simulations_plans_id_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_plan_simulations_plans_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_plan_simulations_plans_id_get(_api::SimulationsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_plan_simulations_plans_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_run_description_simulations_runs_id_descriptions_get_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_run_description_simulations_runs_id_descriptions_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_run_description_simulations_runs_id_descriptions_get_SimulationsApi, "/simulations/runs/{id}/descriptions", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Run Description

Retrieve run metadata

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_run_description_simulations_runs_id_descriptions_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_run_description_simulations_runs_id_descriptions_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_run_description_simulations_runs_id_descriptions_get(_api::SimulationsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_run_description_simulations_runs_id_descriptions_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_run_parameters_simulations_runs_id_parameters_get_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_run_parameters_simulations_runs_id_parameters_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_run_parameters_simulations_runs_id_parameters_get_SimulationsApi, "/simulations/runs/{id}/parameters", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Run Parameters

Get run parameters

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_run_parameters_simulations_runs_id_parameters_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_run_parameters_simulations_runs_id_parameters_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_run_parameters_simulations_runs_id_parameters_get(_api::SimulationsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_run_parameters_simulations_runs_id_parameters_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_run_simulations_runs_id_get_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_run_simulations_runs_id_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_run_simulations_runs_id_get_SimulationsApi, "/simulations/runs/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Run

Retrieve full run

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_run_simulations_runs_id_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_run_simulations_runs_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_run_simulations_runs_id_get(_api::SimulationsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_run_simulations_runs_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_single_simulation_parameter_simulations_simulation_parameters_id_get_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_get_single_simulation_parameter_simulations_simulation_parameters_id_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_single_simulation_parameter_simulations_simulation_parameters_id_get_SimulationsApi, "/simulations/simulation_parameters/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Single Simulation Parameter

Retrieve simulation parameter

Params:
- id::Int64 (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function get_single_simulation_parameter_simulations_simulation_parameters_id_get(_api::SimulationsApi, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_single_simulation_parameter_simulations_simulation_parameters_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_single_simulation_parameter_simulations_simulation_parameters_id_get(_api::SimulationsApi, response_stream::Channel, id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_single_simulation_parameter_simulations_simulation_parameters_id_get(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_plans_simulations_plans_get_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_list_plans_simulations_plans_get(_api::SimulationsApi; page_size=nothing, page=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_plans_simulations_plans_get_SimulationsApi, "/simulations/plans", [])
    OpenAPI.Clients.set_param(_ctx.query, "page_size", page_size)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page", page)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List Plans

Retrieve all plans

Params:
- page_size::Int64
- page::Int64

Return: Any, OpenAPI.Clients.ApiResponse
"""
function list_plans_simulations_plans_get(_api::SimulationsApi; page_size=nothing, page=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_plans_simulations_plans_get(_api; page_size=page_size, page=page, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_plans_simulations_plans_get(_api::SimulationsApi, response_stream::Channel; page_size=nothing, page=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_plans_simulations_plans_get(_api; page_size=page_size, page=page, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_run_descriptions_simulations_runs_descriptions_get_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_list_run_descriptions_simulations_runs_descriptions_get(_api::SimulationsApi; page_size=nothing, page=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_run_descriptions_simulations_runs_descriptions_get_SimulationsApi, "/simulations/runs/descriptions", [])
    OpenAPI.Clients.set_param(_ctx.query, "page_size", page_size)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page", page)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List Run Descriptions

Retrieve all simulation run for all plans

Params:
- page_size::Int64
- page::Int64

Return: Any, OpenAPI.Clients.ApiResponse
"""
function list_run_descriptions_simulations_runs_descriptions_get(_api::SimulationsApi; page_size=nothing, page=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_run_descriptions_simulations_runs_descriptions_get(_api; page_size=page_size, page=page, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_run_descriptions_simulations_runs_descriptions_get(_api::SimulationsApi, response_stream::Channel; page_size=nothing, page=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_run_descriptions_simulations_runs_descriptions_get(_api; page_size=page_size, page=page, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_run_parameters_simulations_runs_id_parameters_put_SimulationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_update_run_parameters_simulations_runs_id_parameters_put(_api::SimulationsApi, id::Int64, request_body::Vector{Any}; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_update_run_parameters_simulations_runs_id_parameters_put_SimulationsApi, "/simulations/runs/{id}/parameters", [], request_body)
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update Run Parameters

Update the parameters for a run

Params:
- id::Int64 (required)
- request_body::Vector{Any} (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function update_run_parameters_simulations_runs_id_parameters_put(_api::SimulationsApi, id::Int64, request_body::Vector{Any}; _mediaType=nothing)
    _ctx = _oacinternal_update_run_parameters_simulations_runs_id_parameters_put(_api, id, request_body; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_run_parameters_simulations_runs_id_parameters_put(_api::SimulationsApi, response_stream::Channel, id::Int64, request_body::Vector{Any}; _mediaType=nothing)
    _ctx = _oacinternal_update_run_parameters_simulations_runs_id_parameters_put(_api, id, request_body; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_plan_simulations_plans_post
export create_run_from_description_simulations_runs_descriptions_post
export create_run_simulations_runs_post
export get_plan_simulations_plans_id_get
export get_run_description_simulations_runs_id_descriptions_get
export get_run_parameters_simulations_runs_id_parameters_get
export get_run_simulations_runs_id_get
export get_single_simulation_parameter_simulations_simulation_parameters_id_get
export list_plans_simulations_plans_get
export list_run_descriptions_simulations_runs_descriptions_get
export update_run_parameters_simulations_runs_id_parameters_put
