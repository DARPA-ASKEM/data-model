# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ExperimentalApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ExperimentalApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ExperimentalApi }) = "http://localhost"

const _returntypes_convert_to_cypher_experimental_cql_get_ExperimentalApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_convert_to_cypher_experimental_cql_get(_api::ExperimentalApi, query::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_convert_to_cypher_experimental_cql_get_ExperimentalApi, "/experimental/cql", [])
    OpenAPI.Clients.set_param(_ctx.query, "query", query)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Convert To Cypher

Convert English to Cypher.

Params:
- query::String (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function convert_to_cypher_experimental_cql_get(_api::ExperimentalApi, query::String; _mediaType=nothing)
    _ctx = _oacinternal_convert_to_cypher_experimental_cql_get(_api, query; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function convert_to_cypher_experimental_cql_get(_api::ExperimentalApi, response_stream::Channel, query::String; _mediaType=nothing)
    _ctx = _oacinternal_convert_to_cypher_experimental_cql_get(_api, query; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_search_provenance_experimental_provenance_get_ExperimentalApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("422", "x"=>".") * "\$") => HTTPValidationError,
)

function _oacinternal_search_provenance_experimental_provenance_get(_api::ExperimentalApi, query::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_search_provenance_experimental_provenance_get_ExperimentalApi, "/experimental/provenance", [])
    OpenAPI.Clients.set_param(_ctx.query, "query", query)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Search Provenance

Convert English to Cypher.

Params:
- query::String (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function search_provenance_experimental_provenance_get(_api::ExperimentalApi, query::String; _mediaType=nothing)
    _ctx = _oacinternal_search_provenance_experimental_provenance_get(_api, query; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function search_provenance_experimental_provenance_get(_api::ExperimentalApi, response_stream::Channel, query::String; _mediaType=nothing)
    _ctx = _oacinternal_search_provenance_experimental_provenance_get(_api, query; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_set_properties_experimental_set_properties_get_ExperimentalApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
)

function _oacinternal_set_properties_experimental_set_properties_get(_api::ExperimentalApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_set_properties_experimental_set_properties_get_ExperimentalApi, "/experimental/set_properties", [])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Set Properties

Modify DB contents to work with Neoviz

Params:

Return: Any, OpenAPI.Clients.ApiResponse
"""
function set_properties_experimental_set_properties_get(_api::ExperimentalApi; _mediaType=nothing)
    _ctx = _oacinternal_set_properties_experimental_set_properties_get(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function set_properties_experimental_set_properties_get(_api::ExperimentalApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_set_properties_experimental_set_properties_get(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export convert_to_cypher_experimental_cql_get
export search_provenance_experimental_provenance_get
export set_properties_experimental_set_properties_get
