# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Concept

    Concept(;
        curie=nothing,
        status=nothing,
    )

    - curie::String
    - status::OntologicalField
"""
Base.@kwdef mutable struct Concept <: OpenAPI.APIModel
    curie::Union{Nothing, String} = nothing
    status = nothing # spec type: Union{ Nothing, OntologicalField }

    function Concept(curie, status, )
        OpenAPI.validate_property(Concept, Symbol("curie"), curie)
        OpenAPI.validate_property(Concept, Symbol("status"), status)
        return new(curie, status, )
    end
end # type Concept

const _property_types_Concept = Dict{Symbol,String}(Symbol("curie")=>"String", Symbol("status")=>"OntologicalField", )
OpenAPI.property_type(::Type{ Concept }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Concept[name]))}

function check_required(o::Concept)
    o.curie === nothing && (return false)
    o.status === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ Concept }, name::Symbol, val)
end
