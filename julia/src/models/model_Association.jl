# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Association

    Association(;
        id=nothing,
        person_id=nothing,
        resource_id=nothing,
        resource_type=nothing,
        role=nothing,
    )

    - id::Int64
    - person_id::Int64
    - resource_id::Int64
    - resource_type::ResourceType
    - role::Role
"""
Base.@kwdef mutable struct Association <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    person_id::Union{Nothing, Int64} = nothing
    resource_id::Union{Nothing, Int64} = nothing
    resource_type = nothing # spec type: Union{ Nothing, ResourceType }
    role = nothing # spec type: Union{ Nothing, Role }

    function Association(id, person_id, resource_id, resource_type, role, )
        OpenAPI.validate_property(Association, Symbol("id"), id)
        OpenAPI.validate_property(Association, Symbol("person_id"), person_id)
        OpenAPI.validate_property(Association, Symbol("resource_id"), resource_id)
        OpenAPI.validate_property(Association, Symbol("resource_type"), resource_type)
        OpenAPI.validate_property(Association, Symbol("role"), role)
        return new(id, person_id, resource_id, resource_type, role, )
    end
end # type Association

const _property_types_Association = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("person_id")=>"Int64", Symbol("resource_id")=>"Int64", Symbol("resource_type")=>"ResourceType", Symbol("role")=>"Role", )
OpenAPI.property_type(::Type{ Association }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Association[name]))}

function check_required(o::Association)
    true
end

function OpenAPI.validate_property(::Type{ Association }, name::Symbol, val)
end
