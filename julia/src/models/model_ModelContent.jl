# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ModelContent

    ModelContent(;
        id=nothing,
        timestamp=nothing,
        content=nothing,
    )

    - id::Int64
    - timestamp::ZonedDateTime
    - content::String
"""
Base.@kwdef mutable struct ModelContent <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    timestamp::Union{Nothing, ZonedDateTime} = nothing
    content::Union{Nothing, String} = nothing

    function ModelContent(id, timestamp, content, )
        OpenAPI.validate_property(ModelContent, Symbol("id"), id)
        OpenAPI.validate_property(ModelContent, Symbol("timestamp"), timestamp)
        OpenAPI.validate_property(ModelContent, Symbol("content"), content)
        return new(id, timestamp, content, )
    end
end # type ModelContent

const _property_types_ModelContent = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("timestamp")=>"ZonedDateTime", Symbol("content")=>"String", )
OpenAPI.property_type(::Type{ ModelContent }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ModelContent[name]))}

function check_required(o::ModelContent)
    true
end

function OpenAPI.validate_property(::Type{ ModelContent }, name::Symbol, val)
    if name === Symbol("timestamp")
        OpenAPI.validate_param(name, "ModelContent", :format, val, "date-time")
    end
    if name === Symbol("content")
        OpenAPI.validate_param(name, "ModelContent", :format, val, "json-string")
    end
end
