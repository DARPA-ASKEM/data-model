# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ModelFramework

    ModelFramework(;
        name=nothing,
        version=nothing,
        semantics=nothing,
    )

    - name::String
    - version::String
    - semantics::String
"""
Base.@kwdef mutable struct ModelFramework <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    version::Union{Nothing, String} = nothing
    semantics::Union{Nothing, String} = nothing

    function ModelFramework(name, version, semantics, )
        OpenAPI.validate_property(ModelFramework, Symbol("name"), name)
        OpenAPI.validate_property(ModelFramework, Symbol("version"), version)
        OpenAPI.validate_property(ModelFramework, Symbol("semantics"), semantics)
        return new(name, version, semantics, )
    end
end # type ModelFramework

const _property_types_ModelFramework = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("version")=>"String", Symbol("semantics")=>"String", )
OpenAPI.property_type(::Type{ ModelFramework }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ModelFramework[name]))}

function check_required(o::ModelFramework)
    o.name === nothing && (return false)
    o.version === nothing && (return false)
    o.semantics === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ModelFramework }, name::Symbol, val)
end
