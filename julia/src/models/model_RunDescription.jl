# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RunDescription

    RunDescription(;
        id=nothing,
        simulator_id=nothing,
        timestamp=nothing,
        completed_at=nothing,
        success=nothing,
        dataset_id=nothing,
        description=nothing,
        response=nothing,
    )

    - id::Int64
    - simulator_id::Int64
    - timestamp::ZonedDateTime
    - completed_at::ZonedDateTime
    - success::Bool
    - dataset_id::Int64
    - description::String
    - response::String
"""
Base.@kwdef mutable struct RunDescription <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    simulator_id::Union{Nothing, Int64} = nothing
    timestamp::Union{Nothing, ZonedDateTime} = nothing
    completed_at::Union{Nothing, ZonedDateTime} = nothing
    success::Union{Nothing, Bool} = nothing
    dataset_id::Union{Nothing, Int64} = nothing
    description::Union{Nothing, String} = nothing
    response::Union{Nothing, String} = nothing

    function RunDescription(id, simulator_id, timestamp, completed_at, success, dataset_id, description, response, )
        OpenAPI.validate_property(RunDescription, Symbol("id"), id)
        OpenAPI.validate_property(RunDescription, Symbol("simulator_id"), simulator_id)
        OpenAPI.validate_property(RunDescription, Symbol("timestamp"), timestamp)
        OpenAPI.validate_property(RunDescription, Symbol("completed_at"), completed_at)
        OpenAPI.validate_property(RunDescription, Symbol("success"), success)
        OpenAPI.validate_property(RunDescription, Symbol("dataset_id"), dataset_id)
        OpenAPI.validate_property(RunDescription, Symbol("description"), description)
        OpenAPI.validate_property(RunDescription, Symbol("response"), response)
        return new(id, simulator_id, timestamp, completed_at, success, dataset_id, description, response, )
    end
end # type RunDescription

const _property_types_RunDescription = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("simulator_id")=>"Int64", Symbol("timestamp")=>"ZonedDateTime", Symbol("completed_at")=>"ZonedDateTime", Symbol("success")=>"Bool", Symbol("dataset_id")=>"Int64", Symbol("description")=>"String", Symbol("response")=>"String", )
OpenAPI.property_type(::Type{ RunDescription }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RunDescription[name]))}

function check_required(o::RunDescription)
    true
end

function OpenAPI.validate_property(::Type{ RunDescription }, name::Symbol, val)
    if name === Symbol("timestamp")
        OpenAPI.validate_param(name, "RunDescription", :format, val, "date-time")
    end
    if name === Symbol("completed_at")
        OpenAPI.validate_param(name, "RunDescription", :format, val, "date-time")
    end
    if name === Symbol("response")
        OpenAPI.validate_param(name, "RunDescription", :format, val, "binary")
    end
end
