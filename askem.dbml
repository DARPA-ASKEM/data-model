Project askem {
  database_type: 'PostgreSQL'
  Note: 'v0.11.4'
}


/////////// DATA ///////////

Enum data.value_type {
  str
  int
  float
  bool
  binary
}

Table data.dataset {
  id int [pk]
  name varchar [not null]
  url varchar [not null]
  description text [not null]
  timestamp datetime [default: `now()`, not null]
  deprecated bool
  sensitivity text
  quality text
  temporal_resolution varchar
  geospatial_resolution varchar
  annotations json
  maintainer int [not null, ref: > public.person.id]
}

Table data.feature {
  id int [pk]
  dataset_id int [ref: > data.dataset.id, not null]
  description text
  display_name varchar
  name varchar [not null]
  value_type data.value_type [not null]
}

Table data.qualifier {
  id int [pk]
  dataset_id int [ref: > data.dataset.id, not null]
  description text
  name varchar [not null]
  value_type data.value_type [not null]
}

Table data.qualifier_xref {
  id int [pk]
  qualifier_id int [ref: > data.qualifier.id, not null]
  feature_id int [ref: > data.feature.id, not null]
}


/////////// MODELS ///////////

Enum modeling.source {
  mrepresentationa
  skema
}

Enum modeling.format {
  gromet
  bilayer
  sbml
  other
}

Enum modeling.operation_type {
  init
  edit
  add 
  remove
  glue
  product
  composition
  decomposition
  other
}

Table modeling.model {
  id int [pk]
  created_at datetime [default: `now()`, not null]
  name varchar [not null]
  description text
  head_id int [ref: > modeling.operation.id, not null]
}

Table modeling.framework {
  id int [pk]
  version varchar [not null]
  name varchar [not null]
  semantics json [not null]
}

Table modeling.operation {
  id int [pk]
  prev int [ref: > modeling.operation.id, not null]
  framework_id int [ref: > modeling.framework.id, not null]
  operation_type modeling.operation_type [not null]
  model_content json [not null]
  timestamp datetime [default: `now()`, not null]
  user int [ref: > public.person.id, not null]
}

Table modeling.intermediate {
  id int [pk]
  created_at datetime [not null]
  source modeling.source [not null]
  type modeling.format [not null]
  representation blob [not null]
  model_id int [ref: > modeling.model.id, note: 'this may become a many to one relation']
  software_id int [ref: > modeling.software.id]
}

Table modeling.software {
  id int [pk]
  created_at datetime [not null]
  source varchar [not null, note: 'E.g. github url']
  storage_uri varchar [not null, note: 'E.g. S3 uri for zipfile of software']
}

Table modeling.runtime {
  id int [pk]
  created_at datetime [default: `now()`, not null]
  name varchar [not null]
  left int [ref: > modeling.framework.id, not null]
  right int [ref: > modeling.framework.id, not null]
}

/////////// SIMULATORS ///////////

Enum simulation.direction {
  input
  output
}

Table simulation.plan {
  id int [pk]
  simulator varchar [not null]
  query varchar [not null]
  body json [not null]
}

Table simulation.applied_model {
  id int [pk]
  model_id int [ref: > modeling.model.id, not null]
  plan_id int [ref: > simulation.plan.id, not null]
}

Table simulation.run {
  id int [pk]
  simulator_id int [ref: > simulation.plan.id, not null]
  created_at datetime [default: `now()`, not null]
  completed_at datetime
  success bool [default: true]
  response blob [note: 'The answer to the query whether its natural language or just a number.']
}

Table simulation.material {
  id int [pk]
  run_id int [ref: > simulation.run.id, not null]
  dataset_id int [ref: > data.dataset.id, not null]
  type simulation.direction
}

Table simulation.parameter {
  id int [pk]
  run_id int [ref: > simulation.run.id, not null]
  name varchar [not null]
  value varchar [not null]
  value_type varchar [not null]
}

/////////// PROCESSING ///////////

Enum processing.extracted_type {
   table
   figure
   equation
}


Table processing.publication {
  id int [pk, note:"We cannot use the URI as a primary key due to the other asset using int types."]
  xdd_uri varchar [not null]
}

Table processing.extracted_data {
  id int [pk]
  publication_id int [ref: > processing.publication.id, not null]
  type processing.extracted_type [not null]
  data blob [not null]
  img blob [not null]
}

/////////// PROJECTS ///////////

Enum projects.asset_table {
   dataset
   model
   extracted_data
   plan
   representation
   publication
}

Enum projects.role {
  author
  contributor
  maintainer
  other
}

Table projects.meta {
  id int [pk]
  name varchar [not null]
  description varchar [not null]
  timestamp datetime [default: `now()`]
  status varchar [not null]
}

Table projects.asset {
  id int [pk]
  project_id int [ref: > projects.meta.id, not null]
  asset_id int [not null]
  type projects.asset_table [not null]
  external_ref varchar [note:'The external resource that is pushed to on update']
}

Table projects.association {
  id int [pk]
  person_id int [ref: > public.person.id, not null]
  asset_id int [ref: > projects.asset.id, not null]
  type projects.asset_table
  role projects.role
}

/////////// ONTOLOGY ///////////

Enum ontology.taggable_table {
   feature
   dataset
   plan
   model 
   project
}

Enum ontology.importance {
   primary
   secondary
   other
}

Table ontology.concept {
  id int [pk]
  term_id varchar [not null]
  type ontology.taggable_table [not null]
  obj_id int [not null]
  status ontology.importance [not null]
}

/////////// PROVENANCE ///////////

Enum provenance.obj_type {
   dataset
   plan
   model 
   project
   representation
   software
   runtime
}

Enum provenance.relation_type {
  derives
  glued
  parents
  copies
}

Table provenance.relation {
  id int [pk]
  created_at datetime [default: `now()`, not null]
  relation_type provenance.relation_type [not null]
  left int [not null]
  left_type provenance.obj_type [not null]
  right int [not null]
  right_type provenance.obj_type [not null]
}

/// PERSON ////

Table person {
  id int [pk]
  name varchar [not null]
  email varchar [not null]
  org varchar [not null]
  website varchar [not null]
  is_registered bool [not null, note: 'Individuals might be listed as a maintainer but may not be a registered user.']
}