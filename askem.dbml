Project askem {
  database_type: 'PostgreSQL'
  Note: 'Description for SQL backend for storing datasets, models, and simulators'
}


/////////// DATA ///////////

Enum data.type {
  str
  int
  float
  bool
  binary
}

Table data.datasets {
  id int [pk]
  name varchar [not null]
  description blob
  timestamp datetime [default: `now()`]
  maintainer_id int [ref: > public.people.id]
  user_id varchar [ref: > public.people.id]
  deprecated bool
  sensitivity blob
  quality blob
  published bool
  temporal_resolution varchar
  geospatial_resolution varchar
}


Table data.features {
  id int [pk]
  dataset_id int [ref: > data.datasets.id]
  qualified_ids [int] [ref: > data.features.id, default: null, note: 'If list exists, then this element is a qualifier']
  feature varchar [not null, note: 'this could be broken out into an annotation metadata table']
  value_type data.type [not null] // move to new feature table
  value varchar [not null]
}

Table data.values [note: 'Geo encoding will likely change'] {
  id int [pk]
  dataset_id int [ref: > data.features.id]
  value_id [int] [ref: > data.values.id, default: null, note:'If the list exists, this element qualfies other elements']
  timestamp datetime
  country varchar
  admin1 varchar
  admin2 varchar
  admin3 varchar
  lat float
  lng float 
  value varchar [not null]
}

/////////// MODELS ///////////
Enum modeling.source {
  mira
  skema
}

Enum modeling.type {
  gromet
  bilayer
  sbml
  other
}

Enum modeling.operation {
  add 
  remove
  glue
  product
  other
}

Table modeling.models {
  id int [pk]
  name varchar
  description blob
  content_hash varchar [not null, note: 'Generate from AST of acset']
  content json [not null]
}

Table modeling.operations {
  id int [pk]
  resulting_model int [ref: > modeling.models.id]
  operation_type modeling.operation
  operation_content json
}

Table modeling.intermediates {
  id int [pk]
  timestamp datetime
  source modeling.source
  type modeling.type
  representation blob
  model_id int [default: null, ref: > modeling.models.id]
}

/////////// SIMULATORS ///////////

Table simulation.plans {
  id int [pk]
  model_id int [ref: > modeling.models.id, not null]
  simulator varchar [not null]
  query varchar
  body blob
}

Table simulation.runs {
  id int [pk]
  simulator_id int [ref: > simulation.plans.id, not null]
  created_at datetime [default: `now()`]
  completed_at datetime
  success bool [default: true]
  input [int] [ref: > data.datasets.id, default: null]
  result [int] [ref: > data.datasets.id, default: null]
  response blob [note: 'The answer to the query whether its natural language or just a number.']
}

Table simulation.parameters {
  id int [pk]
  run_id int [ref: > simulation.runs.id]
  name varchar
  value varchar
  value_type varchar
}

/////////// PROCESSING ///////////

Table processing.publications {
  id int [pk, note:"We can't use the URI as a primary key due to the other assets using int types."]
  xdd_uri varchar [not null]
}

Table processing.extracted_tables {
  id int [pk]
  publication_id int [ref: > processing.publications.id]
  csv blob
  img blob
}

/////////// PROJECTS ///////////
Enum projects.asset_type {
   dataset
   model
   ir
   simulator
   papers
}

Table projects.meta {
  id int [pk]
  name varchar [not null]
  description varchar
  timestamp datetime [default: `now()`]
  status varchar
}

Table projects.assets {
  id int [pk]
  project_id int [ref: > projects.meta.id]
  asset_id int [ref: > modeling.intermediates.id, ref: > processing.publications.id, ref: > data.datasets.id, ref: > simulation.plans.id, ref: > modeling.models.id]
  type projects.asset_type [not null]
  external_ref varchar [default: null, note:'The external resource that is pushed to on update']
}


/////////// ONTOLOGY ///////////


Enum ontology.type {
   feature
   dataset
   plan
   model 
   project
}

Enum ontology.importance {
   primary
   secondary
   other
}

Table ontology.concepts {
  id int [pk]
  term_id varchar
  type ontology.type
  obj_id int [ref: > data.features.id, ref: > modeling.models.id, ref: > simulation.plans.id, ref: > data.datasets.id]
  status ontology.importance
}

/////////// PROVENANCE ///////////

Enum provenance.type {
   dataset
   plans
   model 
   project
}

Enum provenance.relation_type {
  derives
  glued
  parents
  copies
}

Table provenance.relations {
  id int [pk]
  timestamp datetime
  relation_type provenance.relation_type
  left int
  left_type provenance.type
  right int
  right_type provenance.type
}

/// PEOPLE ////
Table people {
  id int [pk]
  name varchar
  email varchar
  org varchar
  website varchar
  is_registered bool [note: 'Individuals might be listed as a maintainer but may not be a registered user.']
}


Ref: "simulation"."runs"."id" < "simulation"."plans"."query"