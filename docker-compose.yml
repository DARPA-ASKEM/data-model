version: "3.9"
networks:
  data-api:
    driver: bridge
    name: data-api
  data-annotation-stack:
    driver: bridge
    name: data-annotation-stack
services:
  rdb:
    container_name: data-service-rdb
    image: "postgres:15.1"
    ports:
      - "8032:5432"
    environment:
      - POSTGRES_PASSWORD=dev
      - POSTGRES_USER=dev
      - POSTGRES_DB=askem
    volumes:
      - ./data:/docker-entrypoint-initdb.d
    networks:
      - data-api
  api:
    container_name: data-service-api
    build: 
      context: ./
      dockerfile: docker/Dockerfile
    ports:
      - "8001:8000"
    env_file:
      - api.env
    environment:
      - NEO4J_ENABLED
    networks:
      - data-annotation-stack
      - data-api
    depends_on:
      - rdb
      - graphdb
      - minio
    volumes:
      - $PWD/tds:/api/tds
      - $PWD/data/datasets:/datasets
  graphdb:
    build:
      context: ./
      dockerfile: docker/Dockerfile.neo4j
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_PLUGINS=["apoc"]
      - apoc.import.file.enabled=true
      - apoc.initializer.cypher.1=CALL apoc.cypher.runSchemaFile("file:///populate-cache.cypher")
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=512M
    depends_on:
      - rdb
    networks:
      - data-api
  minio:
    build:
      context: ./
      dockerfile: docker/Dockerfile.minio
    environment:
      MINIO_ROOT_USER: miniouser
      MINIO_ROOT_PASSWORD: miniopass
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - $PWD/data:/data
    networks:
      - data-api
